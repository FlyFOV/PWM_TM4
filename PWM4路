#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/sysctl.h"
#include "driverlib/rom.h"
#include "driverlib/gpio.h"
#include "driverlib/pwm.h"
#include "driverlib/fpu.h"
#include "driverlib/pin_map.h"

#define GPIO_PB6_M0PWM0         0x00011804
#define GPIO_PB7_M0PWM1         0x00011C04
#define GPIO_PB4_M0PWM2         0x00011004
#define GPIO_PB5_M0PWM3         0x00011404
//以上宏定义在有的编译器中可以不用，有的人的电脑装上编译可以通过，有的则不行，如果编译报错请把它们加上，经查询主要原因是#include "driverlib/pin_map.h"头文件太大，编译器识别不了
int main (void)
{
        //使能FPU
        FPUEnable();
        FPULazyStackingEnable();

        //设置系统时钟为80MHz
        SysCtlClockSet(SYSCTL_SYSDIV_2_5 |SYSCTL_USE_PLL|SYSCTL_OSC_MAIN |SYSCTL_XTAL_16MHZ);

        //使能PWM0模块
        SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM0);

        //使能PWM0和PWM1输出所在GPIO
        SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);


        //配置PH0/PH1为PWM功能
        GPIOPinTypePWM(GPIO_PORTB_BASE, GPIO_PIN_6);
        GPIOPinTypePWM(GPIO_PORTB_BASE, GPIO_PIN_7);
//        GPIOPinTypePWM(GPIO_PORTB_BASE, GPIO_PIN_4);
//        GPIOPinTypePWM(GPIO_PORTB_BASE, GPIO_PIN_5);


        GPIOPinConfigure(GPIO_PB6_M0PWM0);
        GPIOPinConfigure(GPIO_PB7_M0PWM1);
//        GPIOPinConfigure(GPIO_PB4_M0PWM2);
//        GPIOPinConfigure(GPIO_PB5_M0PWM3);

        // PWM时钟配置：不分频
        SysCtlPWMClockSet(SYSCTL_PWMDIV_1);

        //配置PWM发生器0：加减计数，不同步
        PWMGenConfigure(PWM0_BASE,PWM_GEN_0,PWM_GEN_MODE_UP_DOWN|  PWM_GEN_MODE_NO_SYNC);
        PWMGenConfigure(PWM0_BASE,PWM_GEN_1,PWM_GEN_MODE_UP_DOWN| PWM_GEN_MODE_NO_SYNC);

        //设置PWM发生器1的频率，时钟频率/PWM分频数/n，80M/1/800=100KHZ
        PWMGenPeriodSet(PWM0_BASE, PWM_GEN_0, 800);
        PWMGenPeriodSet(PWM0_BASE, PWM_GEN_1, 800);

        //设置PWM0/PWM1输出的脉冲宽度
        PWMPulseWidthSet(PWM0_BASE, PWM_OUT_0, 280);//50%占空比
        PWMPulseWidthSet(PWM0_BASE, PWM_OUT_1, 280);//25%占空比
//        PWMPulseWidthSet(PWM0_BASE, PWM_OUT_2, 400);
//        PWMPulseWidthSet(PWM0_BASE, PWM_OUT_3, 200);


        //使能PWM0和PWM1的输出
        PWMOutputState(PWM0_BASE, (PWM_OUT_0_BIT |PWM_OUT_1_BIT), true);
       // PWMOutputState(PWM0_BASE, (PWM_OUT_2_BIT |PWM_OUT_3_BIT), true);


        //使能PWM发生器
        PWMGenEnable(PWM0_BASE, PWM_GEN_0);
        PWMGenEnable(PWM0_BASE, PWM_GEN_1);
        while(1);
}
